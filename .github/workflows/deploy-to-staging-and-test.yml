name: Deploy to staging and test
on:
  push:
    branches:
      - master
env:
  tf_version: 'latest'
  tf_working_dir: 'fastly/terraform/'
jobs:
  deploy-to-staging:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow
    - run: git push https://heroku:${{ secrets.HEROKU_AUTH_TOKEN }}@git.heroku.com/origami-navigation-service-qa.git HEAD:master --force
    - name: Remove the development and production terraform configuration overrides
      run: rm -f terraform.tfstate fastly/terraform/dev_override.tf fastly/terraform/production_override.tf fastly/terraform/domains_override.tf
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_version: ${{ env.tf_version }}
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: 'Terraform Import'
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_version: ${{ env.tf_version }}
        tf_actions_subcommand: 'import'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: true
        args: 'fastly_service_v1.app ${{ secrets.FASTLY_SERVICE_ID_STAGING }}'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FASTLY_API_KEY: ${{ secrets.FASTLY_API_KEY }}
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_version: ${{ env.tf_version }}
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_version: ${{ env.tf_version }}
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: true
        args: '-out=plan.tfplan'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FASTLY_API_KEY: ${{ secrets.FASTLY_API_KEY }}
    - name: 'Terraform Apply'
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_version: ${{ env.tf_version }}
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: true
        args: '--auto-approve -var name=origami-image-service-qa.in.ft.com -var domain=origami-image-service-qa.in.ft.com'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FASTLY_API_KEY: ${{ secrets.FASTLY_API_KEY }}
    - run: sleep 60
    - run: "curl -X POST -H \"Fastly-Key: ${{ secrets.FASTLY_API_KEY }}\" https://api.fastly.com/service/${{ secrets.FASTLY_SERVICE_ID_STAGING }}/purge_all"
    - run: sleep 60
    - run: npm ci
    - run: HOST=https://origami-image-service-qa.in.ft.com npm run test:fastly

  purge-cdn:
    needs: [deploy-to-staging]
    runs-on: ubuntu-latest
    steps:
      - run: "curl -X POST -H \"Fastly-Key: ${{ secrets.FASTLY_API_KEY }}\" https://api.fastly.com/service/${{ secrets.FASTLY_SERVICE_ID_DEV }}/purge_all"
      - run: sleep 60
  
  end-to-end-test:
    needs: [purge-cdn]
    runs-on: ubuntu-latest
    steps:
      - run: npm ci
      - run: npm run test:fastly
        env:
          HOST: https://origami-image-service-qa.in.ft.com


